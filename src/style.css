body { 
  margin: 0; 
  background: #1a1a1a; 
  font-family: 'Segoe UI', "Tahoma", "Geneva", "Verdana", sans-serif; 
  color: #fff;
} 

#map { 
  width: 100vw; 
  height: 100vh; 
}

#terrain-controls {
  position: fixed;
  top: 20px;
  left: 20px;
  background: rgb(0 0 0 / 90%);
  border-radius: 10px;
  padding: 20px;
  z-index: 1000;
  font-size: 14px;
  border: 1px solid rgb(255 255 255 / 20%);
  backdrop-filter: blur(10px);
  min-width: 250px;
  transition: all 0.3s ease;
}

#controls-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 15px;
}

#terrain-controls h4 {
  margin: 0 0 15px;
  color: #87CEEB;
  font-size: 1.2em;
}

#close-controls {
  background: none;
  border: none;
  color: #ccc;
  font-size: 20px;
  cursor: pointer;
  padding: 0;
  width: 24px;
  height: 24px;
  display: none; /* Hidden by default, shown on mobile */
  line-height: 1;
}

#close-controls:hover {
  color: #87CEEB;
}

#terrain-controls label {
  display: block;
  margin-bottom: 10px;
  color: #ccc;
}

#terrain-controls input[type="range"] {
  width: 150px;
  margin-left: 10px;
}

#terrain-controls input[type="checkbox"] {
  margin-right: 8px;
}

#terrain-controls select {
  margin-left: 10px;
  padding: 4px;
  background: #333;
  color: #fff;
  border: 1px solid #555;
  border-radius: 3px;
}

#terrain-controls button {
  margin: 5px 5px 0 0;
  padding: 8px 12px;
  background: #007cbf;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 12px;
}

#terrain-controls button:hover {
  background: #005a8c;
}

.preset-buttons {
  margin-top: 10px;
}

.preset-buttons label {
  display: inline-block;
  margin-bottom: 5px;
  margin-right: 10px;
}

#direction-value {
  margin-left: 10px;
  color: #87CEEB;
  font-weight: bold;
}

#properties-panel {
  position: fixed;
  top: 0;
  right: 0;
  width: 350px;
  height: 100vh;
  background: rgb(255 255 255 / 90%);
  border-left: 1px solid #ccc;
  overflow-y: auto;
  padding: 15px;
  box-sizing: border-box;
  display: none;
  z-index: 1000;
}

#properties-panel h3 {
  margin: 0 0 10px;
  color: #333;
  font-size: 16px;
}

.feature-item {
  margin-bottom: 15px;
  border: 1px solid #ddd;
  border-radius: 4px;
  background: white;
}

.feature-header {
  padding: 8px 12px;
  background: #f5f5f5;
  border-bottom: 1px solid #ddd;
  cursor: pointer;
  font-weight: bold;
  font-size: 14px;
  color: #87CEEB;
}

.feature-header:hover {
  background: #eee;
}

.feature-properties {
  padding: 12px 15px;
  font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
  font-size: 14px;
  line-height: 1.4;
  color: #2d3748;
  white-space: pre-wrap;
  word-break: break-word;
  max-height: 200px;
  overflow-y: auto;
  background: #f8f9fa;
  border-radius: 3px;
}

.feature-properties.collapsed {
  display: none;
}

#close-panel {
  position: absolute;
  top: 10px;
  right: 15px;
  background: none;
  border: none;
  font-size: 18px;
  cursor: pointer;
  color: #666;
}

#close-panel:hover {
  color: #000;
}

/* ===================================================================
   CSS Override Strategy for MapLibre GL !important declarations
   ===================================================================
   
   The MapLibre GL library uses !important declarations in the 
   .maplibregl-pseudo-fullscreen class. To maintain clean CSS without
   using !important ourselves, we use higher specificity selectors.
   
   Original problematic rule:
   .maplibregl-pseudo-fullscreen {
     height: 100% !important;
     left: 0 !important;
     position: fixed !important;
     top: 0 !important;
     width: 100% !important;
     z-index: 99999;
   }
*/

/* Override MapLibre fullscreen styles with higher specificity */
body #map.maplibregl-map .maplibregl-pseudo-fullscreen {
  /* Use higher specificity to override !important without using !important */
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 99999;
  
  /* Ensure proper display properties for fullscreen */
  display: block;
  margin: 0;
  padding: 0;
  border: none;
  outline: none;
}

/* Ensure the map container behaves properly during fullscreen transitions */
#map.maplibregl-map {
  /* Provide a fallback display strategy */
  position: relative;
  transition: all 0.3s ease;
}

/* Enhanced specificity for pseudo-fullscreen state */
body #map.maplibregl-map.maplibregl-pseudo-fullscreen {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 99999;
  margin: 0;
  padding: 0;
}

/* CSS Custom Properties for Fullscreen Control */
:root {
  --fullscreen-z-index: 99999;
  --fullscreen-transition: all 0.3s ease;
}

/* Modern CSS approach using custom properties */
html body #map.maplibregl-map .maplibregl-pseudo-fullscreen {
  z-index: var(--fullscreen-z-index);
  transition: var(--fullscreen-transition);
}